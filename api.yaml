openapi: 3.0.1
info:
  title: E-commerce API
  version: 1.0.0

servers:
  - url: http://localhost:3001
    description: Localhost server

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        title:
          type: string
        price:
          type: number
        category:
          type: string
        image:
          type: string
        rating:
          type: number

    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        id:
          type: integer
        email:
          type: string
        password:
          type: string

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Order:
      type: object
      properties:
        id:
          type: integer
        customer_name:
          type: string
        customer_id:
          type: integer
        product_id:
          type: integer
        purchasedAt:
          type: string  

paths:
  /products:
    get:
      summary: Get all products
      parameters:
        - name: search
          in: query
          description: Search products by name
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort products by a field (e.g., price)
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Created

  /products/{productId}:
    get:
      summary: Get a product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to retrieve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

    put:
      summary: Update a product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to update
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Updated
        '404':
          description: Product not found

    delete:
      summary: Delete a product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to delete
      responses:
        '204':
          description: No content
        '404':
          description: Product not found
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created

  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to retrieve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      summary: Update a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to update
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Updated
        '404':
          description: User not found

    delete:
      summary: Delete a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to delete
      responses:
        '204':
          description: No content
        '404':
          description: User not found

  /categories:
    get:
      summary: Get all categories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

    post:
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Created

  /categories/{categoryId}:
    get:
      summary: Get a category by ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category to retrieve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category not found

    put:
      summary: Update a category by ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category to update
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Updated
        '404':
          description: Category not found

    delete:
      summary: Delete a category by ID
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category to delete
      responses:
        '204':
          description: No content
        '404':
          description: Category not found

  /orders:
    get:
      summary: Get all orders
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created

  /orders/{orderId}:
    get:
      summary: Get an order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order to retrieve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found

    put:
      summary: Update an order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order to update
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Updated
        '404':
          description: Order not found

    delete:
      summary: Delete an order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the order to delete
      responses:
        '204':
          description: No content
        '404':
          description: Order not found

